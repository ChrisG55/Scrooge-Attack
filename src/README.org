This directory contains the source code to run the benchmarks, retrieve the measurements and plot the results.

Files contained in this directory add common functionalities to the source code in the subdirectories.

- ~error.sh~ :: common error functions
- ~pdu_extractor.m~ :: a helper script to extract time series data from the PDU log
- ~powerspy_extractor.m~ :: a helper script to extract time series data from the PowerSpy log
- ~powerspy_log2csv.sh~ :: a script to convert the PowerSpy log to CSV format
- ~powerspy_p2E.m~ :: a script that computes the total power consumption based on a PowerSpy time series file in CSV format
- ~run_stress.sh~ :: a wrapper script to launch the stress-ng benchmark

* etr
Contains the script for the energy to throughput ratio (ETR) measurement.

- ~plot.sh~ :: a script to extract data needed for plotting

* energy
Contains scripts to measure energy consumption of x86 architecture.

- ~pdu-power-parser.py~ :: a Python script to gather power consumption from a Lindy Ipower Control 2x6 XM PDU
- ~plots.sh~ :: a script to extract data needed for plotting
- ~run_energy.sh~ ::  a script to run the energy benchmark

* failure
Contains the script to parse Linux kernel failure logs.

- ~plot.sh~ :: a script to extract data needed for plotting
- ~ratio.sh~ :: a script to compute the failure ratio for the guardband analysis

* guardband
Contains the source code, scripts and configurations to measure the guardband.

- ~Makefile~ :: a Makefile to compile the benchmarks
- ~mul_bench.c~ :: a benchmark to measure the guardband of an undervolted CPU as in [fn:1]
- ~mulT_bench.service~ :: a systemd service to run the temperature-based multiplication benchmark
- ~mulT_bench.sh~ :: a wrapper script to launch the multiplication benchmark at a specific temperature
- ~plot.sh~ :: a script to extract data needed for plotting
- ~validate.sh~ :: a script to validate the guardband analysis results

* reliability
Contains the scripts used to run the stress-ng[fn:3][fn:4] reliability benchmark.

- ~plot.sh~ :: a script to extract data needed for plotting
- ~ratio.sh~ :: a script to compute the ETR ratio of two averaged data sets
- ~run_reliability.sh~ :: automation of the reliability benchmark (never tested in production)
- ~savings.sh~ :: a script to compute the energy savings based on two averaged data sets

* Footnotes

[fn:1] https://plundervolt.com/

[fn:2] http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.357.7367&rep=rep1&type=pdf

[fn:3] https://github.com/ColinIanKing/stress-ng

[fn:4] https://wiki.ubuntu.com/Kernel/Reference/stress-ng
